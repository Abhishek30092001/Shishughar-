// Copyright (c) 2025, Frappe Technologies and contributors
// For license information, please see license.txt

frappe.query_reports["Growth Monitoring Child wise (Z Score)"] = {
	"filters": [
		{
			"fieldname": "year",
			"label": __("Year"),
			"fieldtype": "Select",
			"options": ["2022", "2023", "2024", "2025"],
			"default": new Date().getFullYear().toString(),
			"on_change": function () {
				frappe.query_report.refresh();
			}
		},
		{
			"fieldname": "month",
			"label": __("Month"),
			"fieldtype": "Select",
			"options": [
				{ "value": "1", "label": "January" },
				{ "value": "2", "label": "February" },
				{ "value": "3", "label": "March" },
				{ "value": "4", "label": "April" },
				{ "value": "5", "label": "May" },
				{ "value": "6", "label": "June" },
				{ "value": "7", "label": "July" },
				{ "value": "8", "label": "August" },
				{ "value": "9", "label": "September" },
				{ "value": "10", "label": "October" },
				{ "value": "11", "label": "November" },
				{ "value": "12", "label": "December" }
			],
			"default": (new Date().getMonth() + 1).toString(),
			"on_change": function () {
				frappe.query_report.refresh();
			}
		},
		{
			"fieldname": "partner",
			"label": __("Partner"),
			"fieldtype": "Link",
			"options": "Partner",
			"default": frappe.defaults.get_user_default("partner"),
			"on_change": function () {
				frappe.query_report.refresh();
			}
		},
		{
			"fieldname": "state",
			"label": __("State"),
			"fieldtype": "Link",
			"options": "State",
			"get_query": function () {
				return {
					filters: {
						"is_active": 1
					}
				};
			},
			"on_change": function () {
				frappe.query_report.refresh();
			}
		},
		{
			"fieldname": "district",
			"label": __("District"),
			"fieldtype": "Link",
			"options": "District",
			"reqd": 0,
			"get_query": function () {
				let state_name = frappe.query_report.get_filter_value("state_name");
				return {
					filters: {
						state_id: state_name ? state_name : undefined
					}
				};
			}
		},
		{
			"fieldname": "block",
			"label": __("Block"),
			"fieldtype": "Link",
			"options": "Block",
			"reqd": 0,
			"get_query": function () {
				let district_name = frappe.query_report.get_filter_value("district_name");
				return {
					filters: {
						district_id: district_name ? district_name : undefined
					}
				};
			}
		},
		{
			"fieldname": "gp",
			"label": __("Gram Panchayat"),
			"fieldtype": "Link",
			"options": "Gram Panchayat",
			"reqd": 0,
			"get_query": function () {
				let block_name = frappe.query_report.get_filter_value("block_name");
				return {
					filters: {
						block_id: block_name ? block_name : undefined
					}
				};
			}
		},
		{
			"fieldname": "supervisor_id",
			"label": __("Supervisor"),
			"fieldtype": "Link",
			"options": "User",
			"get_query": function () {
				let creche = frappe.query_report.get_filter_value("creche");
				return creche ? { filters: { creche: creche } } : {};
			},
		},
		{
			"fieldname": "creche",
			"label": __("Creche"),
			"fieldtype": "Link",
			"options": "Creche",
			"reqd": 0
		},
		{
			"fieldname": "phases",
			"label": __("Phase"),
			"fieldtype": "MultiSelect",
			"options": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"],
			"reqd": 0,
			"default": ""
		},
		{
			"fieldname": "creche_status_id",
			"label": __("Creche Status"),
			"fieldtype": "Select",
			"options": [
				{ "value": "", "label": __("") },
				{ "value": "1", "label": __("Planned") },
				{ "value": "2", "label": __("Plan dropped") },
				{ "value": "3", "label": __("Active/Operational") },
				{ "value": "4", "label": __("Closed") },
			],
			"default": "3",
		},
		{
			fieldname: "cr_opening_range_type",
			label: __("Creche Opening Date"),
			fieldtype: "Select",
			options: [
				{ value: "", label: __("") },
				{ value: "between", label: __("Between") },
				{ value: "before", label: __("Before") },
				{ value: "after", label: __("After") },
				{ value: "equal", label: __("Equal") }
			],
			default: "",
			on_change: function () {
				const dateRangeType = frappe.query_report.get_filter_value("cr_opening_range_type");

				const isBetween = dateRangeType === "between";
				const isSingleDate = ["before", "after", "equal"].includes(dateRangeType);
				const isCleared = dateRangeType === "";

				frappe.query_report.get_filter("c_opening_range").toggle(isBetween);
				frappe.query_report.get_filter("single_date").toggle(isSingleDate);

				if (isBetween) {
					frappe.query_report.set_filter_value("single_date", "");
				} else if (isSingleDate) {
					frappe.query_report.set_filter_value("c_opening_range", []);
				}

				if (isCleared) {
					frappe.query_report.set_filter_value("c_opening_range", []);
					frappe.query_report.set_filter_value("single_date", "");
				}

				frappe.query_report.refresh();
			}
		},
		{
			fieldname: "c_opening_range",
			label: __("Creche Opening Range"),
			fieldtype: "DateRange",
			hidden: 1
		},
		{
			fieldname: "single_date",
			label: __("Creche Opening Date"),
			fieldtype: "Date",
			hidden: 1
		}
	],

	"formatter": function (value, row, column, data, default_formatter) {

		if (column.fieldname === "measurements_taken") {
			return value == "Y" ? "Y" : (!isNaN(value) && value > 0 ? `<b>${value}</b>` : "-");
		}
		if (column.fieldname === "child_name") {
			return typeof value === "string" ? value : (!isNaN(value) && value > 0 ? `<b>${value}</b>` : "-");
		}

		if (["weight_for_age_status", "height_for_age_status", "weight_for_height_status"].includes(column.fieldname)) {
			if (!value) {
				return `<div style="text-align: center;">-</div>`;
			}
		}
		if (["weight", "height"].includes(column.fieldname)) {
			if (value <= 0) {
				return "-";
			}
		}
		// Default formatter for other fields
		return default_formatter(value, row, column, data);
	}
};